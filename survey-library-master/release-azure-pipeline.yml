# Start SurveyJS release pipeline (survey-library)

#trigger only "by hand"
trigger: none
pr: none

#Uncomment for specific version
variables:
 SurveyJSVersion: '1.8.16'

pool:
  vmImage: 'Ubuntu-16.04'

steps:

- checkout: self
  persistCredentials: true
  clean: true

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'install Node.js'

- script: |
    npm install
  displayName: 'npm install'

- powershell: |
    echo $(git --version)
    git config --global user.email "kurmanov.work@gmail.com"
    git config --global user.name "dmitrykurmanov"
    git checkout master
    git pull origin master
    git fetch --tags --force
  displayName: 'git prepare'

# # Comment for specific version
# - powershell: |
#     npm run release
#   displayName: 'npm run release standart'

#Uncomment for specific version
- powershell: |
   npm run release -- --release-as $(SurveyJSVersion)
  displayName: 'npm run release specific version'

- powershell: |
    $version = (git describe --tags).replace("v", "")
    Write-Host "##vso[task.setvariable variable=SurveyJSVersion;]$version"
  displayName: 'npm run release and setup env var SurveyJSVersion'

- script: |
    npm run build_prod
  displayName: 'build'

- script: |
    npm run testsingle
  displayName: 'unit tests'

- script: |
    npm run testcafe_ci
  displayName: 'functional tests'

- powershell: |
    git pull origin master;
    git push --follow-tags origin master;
  displayName: 'push release commit to github'

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_dmitrykurmanov'
    repositoryName: 'surveyjs/survey-library'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'

- script: |
    npm run doc_gen
  displayName: 'generate docs'

- task: Npm@1
  inputs:
    command: 'publish'
    workingDir: 'build/survey-angular'
    publishEndpoint: 'NPM Registry'
    verbose: true
  displayName: 'npm publish survey-angular'

- task: Npm@1
  inputs:
    command: 'publish'
    workingDir: 'build/survey-react'
    publishEndpoint: 'NPM Registry'
    verbose: true
  displayName: 'npm publish survey-react'

- task: Npm@1
  inputs:
    command: 'publish'
    workingDir: 'build/survey-vue'
    publishEndpoint: 'NPM Registry'
    verbose: true
  displayName: 'npm publish survey-vue'

- task: Npm@1
  inputs:
    command: 'publish'
    workingDir: 'build/survey-knockout'
    publishEndpoint: 'NPM Registry'
    verbose: true
  displayName: 'npm publish survey-knockout'

- task: Npm@1
  inputs:
    command: 'publish'
    workingDir: 'build/survey-jquery'
    publishEndpoint: 'NPM Registry'
    verbose: true
  displayName: 'npm publish survey-jquery'

- task: Npm@1
  inputs:
    command: 'publish'
    workingDir: 'build/survey-core'
    publishEndpoint: 'NPM Registry'
    verbose: true
  displayName: 'npm publish survey-core'

- script: |
    npm run doc_update
  displayName: 'update docs'

# create build artifact file 'version.txt'
- powershell: |
    New-Item "version.txt"
    Set-Content version.txt $(SurveyJSVersion)
    Get-Content version.txt
  displayName: 'create version file as build artifact'

#trigger next build via the artifact file 'version.txt'
- task: CopyFiles@2
  inputs:
    contents: 'version.txt'
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: 'copy version file to Build.ArtifactStagingDirectory'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'SurveyJSVersionFile'
    publishLocation: 'Container'
  displayName: 'Publish Build Artifact - SurveyJSVersionFile'
